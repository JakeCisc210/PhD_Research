function  peer_bet = peer_to_peer(p1,p2,M,x)
%%% INPUTS
% P1 - the probability that player 1 submitted for the focal event
%
% P2 - the probability that player 2 submitted for the focal event
%
% M - the maximum bet amount for both players
%
% x - extraction coefficient (the ratio of profit to a single player's
%       expectation value) 

%%% OUTPUTS
% peer_bet is a struct with the following fields:
%
%       pot - the sum of money both players submitted, minus the sportsbook
%               profit
%
%       profit - the amount of money the sportsbook made from arranging this bet
%
%       extraction coefficient - the ratio of profit to a single player's
%               expectation value
% 
%       player is a struct with the following fields
%               win_condition - 0/1 depending on whether the players wins if the
%                       focal event doesn't happen/happens
%               bet_amount - amount the player must put in 
%     
    peer_bet.profit = x*(max(p1,p2)-min(p1,p2))/(max(p1+p2
    
    
    if p1 > p2
        peer_bet.player(1).win_condition = 1;
        peer_bet.player(2).win_condition = 0;
        if p1 + p2 >= 1
            peer_bet.player(1).bet_amount = M;
            
        
       WinsWith1 = "Mason";
       Fee = percent_fee_funct(p1,p2,MaxBid,Percent);
       [MasonPays, ZackPays, Profitm, Profitz] = pays_wins(p1,p2,MaxBid,Fee);
       Winnings = MasonPays + ZackPays - Fee;
       if abs(Profitm - Profitz) < max(.001*MaxBid,.02)
           ExpectedProfit = Profitm;
       else
           fprintf("Unequal profits");
       end   
    end
    
    if p1 < p2
       WinsWith1 = "Zack";
       Fee = percent_fee_funct(p2,p1,MaxBid,Percent);
       [ZackPays, MasonPays, Profitz, Profitm] = pays_wins(p2,p1,MaxBid,Fee);
       Winnings = MasonPays + ZackPays - Fee;
       if abs(Profitm - Profitz) < max(.001*MaxBid,.02)
           ExpectedProfit = Profitm;
       else
           fprintf("Unequal profits");
       end
    end
    
    if p1 == p2
       WinsWith1 = "Mason";
       Fee = 0;
       MasonPays = MaxBid;
       ZackPays = MaxBid;
       Winnings = 2*MaxBid;
       ExpectedProfit = 0;
    end 
end
